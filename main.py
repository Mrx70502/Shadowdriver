import telebot
from telebot import types

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
BOT_TOKEN = '7394525328:AAEhJis7PgGoiwaUA8R04zEDAUbnEGNgi4I'
ORDER_CHAT_ID = -1002183767964  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
ADMIN_CHAT_ID = -1002183767964  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

bot = telebot.TeleBot(BOT_TOKEN)

# –≠—Ç–∞–ø—ã –∑–∞–∫–∞–∑–∞
class OrderState:
    NAME = 1
    PHONE = 2
    PICKUP = 3
    DESTINATION = 4
    TIME = 5

user_data = {}

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    item1 = types.KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª—è üöï")
    item2 = types.KeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚ùå")
    markup.add(item1, item2)
    bot.send_message(message.chat.id, '–í—ñ—Ç–∞—é —É –Ω–∞—à–æ–º—É —Å–µ—Ä–≤—ñ—Å—ñ –ø—ñ–¥–±–æ—Ä—É –≤–æ–¥—ñ—ó–≤ "SHADOW DRIVER", –Ω–∞—Ç–∏—Å–∫–∞–π—Ç–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üòú', reply_markup=markup)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.text == "–ó–∞–∫–∞–∑–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª—è üöï":
        user_data[message.chat.id] = {}
        bot.send_message(message.chat.id, '–Ø–∫ –º–æ–∂—É –¥–æ –≤–∞—Å –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—è?')
        bot.register_next_step_handler(message, get_name)
    elif message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚ùå":
        user_data.pop(message.chat.id, None)
        bot.send_message(message.chat.id, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω.', reply_markup=types.ReplyKeyboardRemove())

def get_name(message):
    user_data[message.chat.id]['name'] = message.text
    bot.send_message(message.chat.id, '–ë—É–¥—å—Ç–µ –ª–∞—Å–∫–∞–≤—ñ, –∑–∞–ª–∏—à—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É ')
    bot.register_next_step_handler(message, get_phone)

def get_phone(message):
    user_data[message.chat.id]['phone'] = message.text
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    button = types.KeyboardButton("–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è  üìç", request_location=True)
    markup.add(button)
    bot.send_message(message.chat.id, '–ó–≤—ñ–¥–∫–∏ –≤–∞—Å –∑–∞–±—Ä–∞—Ç–∏? (–º–æ–∂–µ—Ç–µ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é)', reply_markup=markup)
    bot.register_next_step_handler(message, get_pickup)

def get_pickup(message):
    if message.location:
        lat = message.location.latitude
        lon = message.location.longitude
        user_data[message.chat.id]['pickup'] = f"–õ–æ–∫–∞—Ü–∏—è: ({lat}, {lon})"
        user_data[message.chat.id]['pickup_waze'] = f"https://www.waze.com/ul?ll={lat},{lon}&navigate=yes"
    else:
        user_data[message.chat.id]['pickup'] = message.text
        user_data[message.chat.id]['pickup_waze'] = None
    bot.send_message(message.chat.id, '–í–∫–∞–∂—ñ—Ç—å –∞–¥—Ä–µ—Å—É –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è ')
    bot.register_next_step_handler(message, get_destination)

def get_destination(message):
    if message.location:
        lat = message.location.latitude
        lon = message.location.longitude
        user_data[message.chat.id]['destination'] = f"–õ–æ–∫–∞—Ü–∏—è: ({lat}, {lon})"
        user_data[message.chat.id]['destination_waze'] = f"https://www.waze.com/ul?ll={lat},{lon}&navigate=yes"
    else:
        user_data[message.chat.id]['destination'] = message.text
        user_data[message.chat.id]['destination_waze'] = None
    bot.send_message(message.chat.id, '–ù–∞ –∫–æ—Ç—Ä—É –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ?')
    bot.register_next_step_handler(message, get_time)

def get_time(message):
    user_id = message.chat.id
    if user_id in user_data:
        user_data[user_id]['time'] = message.text

        order_details = (
            f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\n"
            f"–ò–º—è: {user_data[user_id]['name']}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {user_data[user_id]['phone']}\n"
            f"–û—Ç–∫—É–¥–∞: {user_data[user_id]['pickup']}\n"
            f"–ö—É–¥–∞: {user_data[user_id]['destination']}\n"
            f"–í—Ä–µ–º—è –ø–æ–¥–∞—á–∏: {user_data[user_id]['time']}"
        )

        if user_data[user_id].get('pickup_waze'):
            order_details += f"\n–û—Ç–∫—É–¥–∞: {user_data[user_id]['pickup_waze']}"
        if user_data[user_id].get('destination_waze'):
            order_details += f"\n–ö—É–¥–∞: {user_data[user_id]['destination_waze']}"

        markup = types.InlineKeyboardMarkup()
        if user_data[user_id].get('pickup_waze'):
            btn_pickup = types.InlineKeyboardButton("–Ω—É —á—Ç–æ –Ω–∞—Ä–æ–¥, –ø–æ–≥–Ω–∞–ª–∏ –Ω–∞—Ö—É–π üöï", url=user_data[user_id]['pickup_waze'])
            markup.add(btn_pickup)
        if user_data[user_id].get('destination_waze'):
            btn_destination = types.InlineKeyboardButton("–∞ –∫—É–¥–∞ –º–Ω–µ –µ—Ö–∞—Ç—å? üìç", url=user_data[user_id]['destination_waze'])
            markup.add(btn_destination)

        bot.send_message(ORDER_CHAT_ID, order_details, reply_markup=markup)
        bot.send_message(user_id, '–í–∞—à –∑–∞–ø–∏—Ç –ø—Ä–∏–π–Ω—è—Ç–æ, –æ—á—ñ–∫—É–π—Ç–µ –Ω–∞ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –≤–æ–¥—ñ—è, –≤—ñ–Ω –≤–∞–º –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É—î. –î—è–∫—É—î–º–æ –∑–∞ —Ç–µ —â–æ –∫–æ—Ä–∏—Å—Ç—É—î—Ç–µ—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤—ñ—Å–æ–º, –≤–¥—è—á–Ω—ñ –∫–æ–∂–Ω–æ–º—É –∫–ª—ñ—î–Ω—Ç—É –∑–∞ –¥–æ–≤—ñ—Ä—Éüòä')
    else:
        bot.send_message(user_id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ —Å–Ω–æ–≤–∞.')

bot.polling()